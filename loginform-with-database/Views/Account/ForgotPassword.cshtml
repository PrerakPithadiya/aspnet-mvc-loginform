@model loginform_with_database.Models.ForgotPasswordModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Forgot Password";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card mt-5">
                <div class="card-header">
                    <h2 class="text-center">Reset Password</h2>
                </div>
                <div class="card-body">
                    <form asp-action="ForgotPassword" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="form-group mb-3">
                            <label asp-for="Username" class="control-label"></label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-user"></i>
                                </span>
                                <input asp-for="Username" class="form-control" />
                            </div>
                            <span asp-validation-for="Username" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="NewPassword" class="control-label"></label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-lock"></i>
                                </span>
                                <input asp-for="NewPassword" class="form-control password-input" type="password" />
                                <span class="input-group-text password-toggle" role="button" tabindex="0" aria-label="Toggle password visibility">
                                    <i class="fas fa-eye" aria-hidden="true"></i>
                                </span>
                            </div>
                            <span asp-validation-for="NewPassword" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="ConfirmPassword" class="control-label"></label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-lock"></i>
                                </span>
                                <input asp-for="ConfirmPassword" class="form-control password-input" type="password" />
                                <span class="input-group-text password-toggle" role="button" tabindex="0" aria-label="Toggle password visibility">
                                    <i class="fas fa-eye" aria-hidden="true"></i>
                                </span>
                            </div>
                            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                        </div>

                        <div class="form-group text-center">
                            <button type="submit" class="btn btn-primary">Reset Password</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Use event delegation so clicks on the icon or its parent are handled.
        document.addEventListener('DOMContentLoaded', function () {
            document.addEventListener('click', function (e) {
                const toggle = e.target.closest('.password-toggle');
                if (!toggle) return;

                const inputGroup = toggle.closest('.input-group');
                const passwordInput = inputGroup ? inputGroup.querySelector('.password-input') : null;
                const icon = toggle.querySelector('i');
                if (!passwordInput || !icon) return;

                if (passwordInput.type === 'password') {
                    passwordInput.type = 'text';
                    icon.classList.remove('fa-eye');
                    icon.classList.add('fa-eye-slash');
                } else {
                    passwordInput.type = 'password';
                    icon.classList.remove('fa-eye-slash');
                    icon.classList.add('fa-eye');
                }
            });

            // Keyboard support: toggle on Enter or Space when focused
            document.addEventListener('keydown', function (e) {
                if (e.key !== 'Enter' && e.key !== ' ') return;
                const toggle = document.activeElement && document.activeElement.classList && document.activeElement.classList.contains('password-toggle') ? document.activeElement : null;
                if (!toggle) return;
                e.preventDefault();

                const inputGroup = toggle.closest('.input-group');
                const passwordInput = inputGroup ? inputGroup.querySelector('.password-input') : null;
                const icon = toggle.querySelector('i');
                if (!passwordInput || !icon) return;

                if (passwordInput.type === 'password') {
                    passwordInput.type = 'text';
                    icon.classList.remove('fa-eye');
                    icon.classList.add('fa-eye-slash');
                } else {
                    passwordInput.type = 'password';
                    icon.classList.remove('fa-eye-slash');
                    icon.classList.add('fa-eye');
                }
            });
        });
    </script>

    <style>
        .input-group-text {
            background-color: #f8f9fa;
            border: 1px solid #ced4da;
            cursor: pointer;
        }
        .password-toggle:hover {
            background-color: #e9ecef;
        }
    </style>
}
